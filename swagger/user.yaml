paths:
  /user/assignUser:
    post:
      tags:
        - user
      summary: 신규 유저(user)를 등록
      description: 신규 유저를 등록하고 결과를 클라이언트에 통보
      operationId: assignUser
      requestBody:
        description: 신규 유저 정보
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - user_password
                - user_nickname
                - user_phone_number
                - user_name
              properties:
                user_agreement:
                  type: object
                  description: 사용자 동의여부 JSON객체
                  properties:
                    is_over_fourteen:
                      type: boolean
                      description: (동의)14살 이상
                    is_service:
                      type: boolean
                      description: (동의)서비스 동의
                    is_personal_info:
                      type: boolean
                      description: (동의)개인정보제공
                    is_location_service_info:
                      type: boolean
                      description: (동의)위치정보제공
                    is_donation_info:
                      type: boolean
                      description: (동의)기부정보
                    is_marketting_info:
                      type: boolean
                      description: (동의)마케팅정보
                user_address:
                  type: object
                  description: 사용자 주소 JSON객체
                  properties:
                    city:
                      type: string
                      description: 사용자 주소(시,도,군)
                    district:
                      type: string
                      description: 사용자 주소(군,구)
                    neighbor:
                      type: string
                      description: 사용자 주소(동,읍,면)
                    brief:
                      type: string
                      description: 사용자 주소
                    detail:
                      type: string
                      description: 사용자 상세 주소
                user_mobile_company:
                  type: string
                  description: 이동통신사
                user_name:
                  type: string
                  description: 유저 이름(실명)
                user_password:
                  type: string
                  description: 유저 패스워드
                user_phone_number:
                  type: string
                  description: 유저 핸드폰 번호
                user_nickname:
                  type: string
                  description: 유저 닉네임
                user_profile_uri:
                  type: string
                  format: binary
                  description: 유저 프로필 사진
                user_is_verified_phone_number:
                  type: boolean
                  description: 핸드폰 인증여부
            encoding:
              user_agreement:
                contentType: application/json
              user_address:
                contentType: application/json
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user/assignPet:
    post:
      tags:
        - user
      summary: 신규 반려동물(pet)을 등록
      description: 신규 반려동물을 등록하고 결과를 클라이언트에 통보
      operationId: assignPet
      requestBody:
        description: 신규 반려동물 정보
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - userobject_id
                - pet_is_temp_protection
                - pet_sex
                - pet_species
                - pet_species_detail
                - pet_status
                - user_nickname
              properties:
                userobject_id:
                  type: string
                  description: 등록하고 있는 유저 ID(몽고디비 오브젝트 아이디), 반려동물의 주인 ID
                pet_birthday:
                  type: string
                  description: 동물 생일
                pet_is_temp_protection:
                  type: boolean
                  description: 임시보호 여부
                pet_neutralization:
                  type: string
                  description: 중성화 여부 {'yes'|'no'|'unknown'}
                pet_sex:
                  type: string
                  description: 성별 { 'male'|'female'|'unknown'}
                pet_species:
                  type: string
                  description: 반려동물의 종류(ex 개, 고양이, 토끼 등)
                pet_species_detail:
                  type: string
                  description: 반려동물의 종류(ex 리트리버, 불독, 진돗개 등)
                pet_status:
                  type: string
                  description: 반려동물의 상태, 임시보호중(protect), 입양됨(adopt), 반려동물(companion) {'protect'|'adopt'|'companion'}
                pet_weight:
                  type: string
                  description: 반려동물 몸무게
                user_nickname:
                  type: string
                  description: 반려동물 닉네임
                user_profile_uri:
                  type: string
                  format: binary
                  description: 반려동물 프로필 사진
                protect_act_protect_animal_id:
                  type: string
                  description: 보호소의 보호동물 Object_ID (보호소로부터 입양, 임보되었을 경우에만 기입)
                protect_animal_status:
                  type: string
                  description: 보호소 동물 상태 ('registered_adopt' || 'registered_protect') (보호소로부터 입양, 임보되었을 경우에만 기입)
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user/assignShelter:
    post:
      tags:
        - user
      summary: 신규 보호소(Shelter)를 등록
      description: 신규 보호소를 등록하고 결과를 클라이언트에 통보
      operationId: assignShelter
      requestBody:
        description: 신규 보호소 정보
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - shelter_delegate_contact_number
                - shelter_name
                - shleter_type
                - user_password
              properties:
                shelter_address:
                  type: object
                  description: 보호소 주소 Json객체
                  properties:
                    brief:
                      type: string
                      description: 보호소 주소
                    detail:
                      type: string
                      description: 보호소 상세 주소
                shelter_delegate_contact_number:
                  type: string
                  description: 보호소 대표전화번호
                shelter_foundation_date:
                  type: string
                  description: 보호소 설립일자
                shelter_homepage:
                  type: string
                  description: 보호소 홈페이지 uri
                shelter_name:
                  type: string
                  description: 보호소 이름
                shelter_type:
                  type: string
                  description: 보호소 타잎 ('private'|'public')
                user_email:
                  type: string
                  description: 보호소 이메일
                user_password:
                  type: string
                  description: 보호소 접속 패스워드
                user_profile_uri:
                  type: string
                  format: binary
                  description: 보호소 프로필 사진 uri
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user/checkProtectPet:
    post:
      tags:
        - user
      summary: 유저가 보호요청을 한 동물이 있는지 여부를 검색
      description: 동물보호 요청을 한 동물이 있을때 해당 동물의 정보를 클라이언트에 돌려줌
      operationId: checkProtectPet
      requestBody:
        description: 체크할 유저의 ID(MongoDB의 UserObject Document ID)
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
              properties:
                userobject_id:
                  type: string
                  description: 체크할 유저의 ID(MongoDB의 UserObject Document ID)
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user/checkShelterCode:
    post:
      tags:
        - user
      summary: 보호소 코드 체크
      description: 보호소 코드 체크
      operationId: checkShelterCode
      requestBody:
        description: 클라이언트에서 입력한 보호소의 코드
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - shelter_code
              properties:
                shelter_code:
                  type: string
                  description: 체크할 보호소의 코드
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /user/userLogin:
    post:
      tags:
        - user
      summary: 로그인
      description: 로그인
      operationId: userLogin
      requestBody:
        description: 유저 아이디와 비밀번호
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - login_id
                - login_password
              properties:
                login_id:
                  type: string
                  description: 로그인할 아이디
                login_password:
                  type: string
                  description: 로그인할 비밀번호
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/userLogout:
    post:
      tags:
        - user
      summary: 로그아웃
      description: 유저 로그아웃
      operationId: userLogout
      requestBody:
        description: 로그아웃할 유저 아이디
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/getUserProfile:
    post:
      tags:
        - user
      summary: 유저(반려동물,보호소,일반유저) 프로필
      description: 유저의 프로필을 가져온다
      operationId: getUserProfile
      requestBody:
        description: 프로필을 가져올 유저의 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
              properties:
                userobject_id:
                  type: string
                  description: 프로필을 얻어올 유저의 아이디(DB아이디)
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/nicknameDuplicationCheck:
    post:
      tags:
        - user
      summary: 유저 닉네임 중복체크
      description: 유저 등록 및 수정시 닉네임이 다른 유저에 의해 사용되고 있는지 검사한다.
      operationId: nicknameDuplicationCheck
      requestBody:
        description: 검사할 닉네임
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_nickname
              properties:
                user_nickname:
                  type: string
                  description: 중복체크를 수행할 닉네임
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/updateUserInformation:
    post:
      tags:
        - user
      summary: 유저(일반유저,펫,보호소) 정보(사진,닉네임)를 업데이트
      description: 유저 정보(프로필 사진, 닉네임을 업데이트한다.)
      operationId: updateUserInformation
      requestBody:
        description: 검사할 닉네임
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - userobject_id
              properties:
                userobject_id:
                  type: string
                  description: 정보를 수정할 유저의 몽고디비 도큐먼트 ID
                user_nickname:
                  type: string
                  description: 수정할 닉네임
                user_profile_uri:
                  type: string
                  format: binary
                  description: 교체할 프로필 이미지 로컬(디바이스)경로
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/updateUserDetailInformation:
    post:
      tags:
        - user
      summary: 유저 상세정보(성별,생일,지역,관심사)를 업데이트
      description: 유저 상세정보(성별,생일,지역,관심사)를 업데이트
      operationId: updateUserDetailInformation
      requestBody:
        description: 유저 상세정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_birthday:
                  type: string
                  description: 유저 생일, 마이메뉴-프로필 상세정보에서 수정
                user_sex:
                  type: string
                  description: 유저 성별, 마이메뉴-프로필 상세정보에서 수정('male'|'female')
                user_interests:
                  type: object
                  description: 유저의 관심사, 마이메뉴-프로필 상세정보에서 수정
                  properties:
                    interests_location:
                      type: array
                      items:
                        type: string
                      description: 지역 관심사
                    interests_beauty:
                      type: array
                      items:
                        type: string
                      description: 미용 관심사
                    interests_activity:
                      type: array
                      items:
                        type: string
                      description: 활동 관심사
                    interests_food:
                      type: array
                      items:
                        type: string
                      description: 음식 관심사
                    interests_health:
                      type: array
                      items:
                        type: string
                      description: 건강 관심사
                user_address:
                  type: object
                  description: 유저 지역정보
                  properties:
                    city:
                      type: string
                      description: 시,도
                    district:
                      type: string
                      description: 군,구
                    neighbor:
                      type: string
                      description: 동,읍,면
                    brief:
                      type: string
                      description: 검색주소
                    detail:
                      type: string
                      description: 검색주소(자세히)
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/updatePetDetailInformation:
    post:
      tags:
        - user
      summary: 반려동물 상세 정보를 수정
      description: 반려동물 상세 정보(생일, 몸무게, 성별, 중성화 여부)를 수정
      operationId: updatePetDetailInformation
      requestBody:
        description: 반려동물 상세 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
              properties:
                userobject_id:
                  type: string
                  description: 정보를 수정할 반려동물의 몽고디비 도큐먼트 ID
                pet_sex:
                  type: string
                  description: 반려동물의 성별
                pet_neutralization:
                  type: string
                  description: 반려동물 중성화 여부
                pet_birthday:
                  type: string
                  description: 반려동물 생일
                pet_weight:
                  type: string
                  description: 반려동물 몸무게
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/addUserToFamily:
    post:
      tags:
        - user
      summary: 반려동물의 가족계정에 유저를 추가
      description: 반려동물의 가족계정에 유저를 추가
      operationId: addUserToFamily
      requestBody:
        description: 가족계정으로 묶을 유저 ID와 펫 ID
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
                - family_userobject_id
              properties:
                userobject_id:
                  type: string
                  description: 반려동물 유저 객체 ID
                family_userobject_id:
                  type: string
                  description: 반려동물의 가족 계정에 추가할 유저의 ID
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/changeUserPassword:
    post:
      tags:
        - user
      summary: 유저의 패스워드를 변경
      description: 유저의 패스워드를 변경
      operationId: changeUserPassword
      requestBody:
        description: 유저의 현재 비밀번호와, 바꿀 새 비밀번호
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_password
                - new_user_password
              properties:
                user_password:
                  type: string
                  description: 유저의 현재 비밀번호
                new_user_password:
                  type: string
                  description: 새로운 유저의 비밀번호
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/getUserInfoById:
    post:
      tags:
        - user
      summary: 유저의 상세 정보를 조회
      description: 유저의 상세 정보를 조회한다. (user_type에 따라 출력 필드가 달라짐)
      operationId: getUserInfoById
      requestBody:
        description: 상세 정보를 조회할 유저의 아이디
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
              properties:
                userobject_id:
                  type: string
                  description: 상세 정보를 조회할 유저의 오브젝트 ID
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/updateUserIntroduction:
    post:
      tags:
        - user
      summary: 유저 소개글 변경
      description: 유저 소개글을 변경한다.
      operationId: updateUserIntroduction
      requestBody:
        description: 유저 소개글을 변경할 아이디
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_introduction
              properties:
                user_introduction:
                  type: string
                  description: 변경할 유저의 소개글
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/updateShelterDetailInformation:
    post:
      tags:
        - user
      summary: 보호소 상세 정보를 수정
      description: 보호소 상세 정보를 수정
      operationId: updateShelterDetailInformation
      requestBody:
        description: 보호소 상세 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
              properties:
                userobject_id:
                  type: string
                  description: 수정할 보호소 오브젝트 아이디
                shelter_name:
                  type: string
                  description: 보호소 이름
                shelter_address:
                  type: object
                  description: 보호소 주소
                  properties:
                    city:
                      type: string
                      description: 보호소 주소(시,도,군)
                    district:
                      type: string
                      description: 보호소 주소(군,구)
                    neighbor:
                      type: string
                      description: 보호소 주소(동,읍,면)
                    brief:
                      type: string
                      description: 보호소 주소
                    detail:
                      type: string
                      description: 보호소 상세 주소
                shelter_delegate_contact_number:
                  type: string
                  description: 보호소 대표 전화번호, 휴대폰 번호
                user_email:
                  type: string
                  description: 이메일
                shelter_homepage:
                  type: string
                  description: 보호소 홈페이지 uri
                shelter_foundation_date:
                  type: string
                  description: 보호소 설립일
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/getUserListByNickname:
    post:
      tags:
        - user
      summary: 닉네임으로 유저 계정을 검색, 리스트를 반환
      description: 유저의 닉네임을 필터로 유저 계정을 검색
      operationId: getUserListByNickname
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_nickname
                - request_number
              properties:
                user_nickname:
                  type: string
                  description: 검색할 유저의 닉네임
                request_number:
                  type: integer
                  description: 요청할 유저 계정 숫자
                userobject_id:
                  type: string
                  description: 커서 객체(페이징 처리)
                user_type:
                  type: string
                  description: 조회할 유저의 타잎(미입력시 모든 타잎 다 조회){'user'|'pet'|'shelter'}
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/removeUserFromFamily:
    post:
      tags:
        - user
      summary: 가족 계정에서 대상 유저를 삭제
      description: 가족 계정에서 대상 유저를 삭제
      operationId: removeUserFromFamily
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - target_userobject_id
                - pet_userobject_id
              properties:
                target_userobject_id:
                  type: string
                  description: 가족계정에서 뺄 유저아이디
                pet_userobject_id:
                  type: integer
                  description: 가족계정을 조정할 반려동물아이디
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/getPettypes:
    post:
      tags:
        - user
      summary: 동물의 종류 코드를 받아온다.
      description: 동물의 종류 코드를 받아온다.
      operationId: getPettypes
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
              properties:
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/followUser:
    post:
      tags:
        - user
      summary: 유저를 팔로우한다.
      description: 유저를 팔로우한다.
      operationId: followUser
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - follow_userobject_id
              properties:
                follow_userobject_id:
                  type: string
                  description: 팔로우 할 유저아이디
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/unFollowUser:
    post:
      tags:
        - user
      summary: 유저를 팔로우 취소한다.
      description: 유저를 팔로우 취소한다.
      operationId: unFollowUser
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - follow_userobject_id
              properties:
                follow_userobject_id:
                  type: string
                  description: 팔로우 취소 할 유저아이디
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/getFollows:
    post:
      tags:
        - user
      summary: 대상 유저가 팔로우 한 유저를 검색한다.
      description: 대상 유저가 팔로우 한 유저를 검색한다.
      operationId: getFollows
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
              properties:
                userobject_id:
                  type: string
                  description: 팔로우 목록을 열람할 유저의 아이디.
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/getFollowers:
    post:
      tags:
        - user
      summary: 대상 유저를 팔로우 한 유저를 검색한다.
      description: 대상 유저를 팔로우 한 유저를 검색한다.
      operationId: getFollowers
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
              properties:
                userobject_id:
                  type: string
                  description: 팔로워 목록을 열람할 유저의 아이디.
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/setPetStatus:
    post:
      tags:
        - user
      summary: 반려동물의 상태를 변경
      description: 반려동물의 상태를 변경
      operationId: setPetStatus
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
                - pet_status
              properties:
                userobject_id:
                  type: string
                  description: 반려동물의 ID.
                pet_status:
                  type: string
                  description: 반려동물의 상태값 (protect|adopt|companion)
                pet_adopter:
                  type: string
                  description: 반려동물 입양자 UserObjectID
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/getAnimalListNotRegisterWithCompanion:
    post:
      tags:
        - user
      summary: 입양 및 임보로 승인된 동물중 반려 동물로 등록되지 않은 동물 목록 (로그인한 계정에 준함)
      description: 입양 및 임보로 승인된 동물중 반려 동물로 등록되지 않은 동물 목록 (로그인한 계정에 준함)
      operationId: getAnimalListNotRegisterWithCompanion
      requestBody:
        description: 입양 및 임보로 승인된 동물중 반려 동물로 등록되지 않은 동물 목록 (로그인한 계정에 준함)
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/getFollowsWithNickname:
    post:
      tags:
        - user
      summary: 닉네임으로 팔로우 검색
      description: 닉네임으로 팔로우 검색
      operationId: getFollowsWithNickname
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
                - user_nickname
              properties:
                userobject_id:
                  type: string
                  description: 유저 userobject_id
                user_nickname:
                  type: string
                  description: 팔로우 닉네임
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /user/getFollowersWithNickname:
    post:
      tags:
        - user
      summary: 닉네임으로 팔로워 검색
      description: 닉네임으로 팔로워 검색
      operationId: getFollowersWithNickname
      requestBody:
        description: 요청 정보
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userobject_id
                - user_nickname
              properties:
                userobject_id:
                  type: string
                  description: 유저 userobject_id
                user_nickname:
                  type: string
                  description: 팔로워 닉네임
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
#jsdoc을 yaml으로 변환
#.*?\{(.*?)\}.*?\.(.*?)\s- (.*?)$
# .*?\{(.*?)\} (.*?) - (.*?)$
#$2:\n  type: $1\n  description: $3

